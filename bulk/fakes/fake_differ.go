// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/nsync/bulk"
	"github.com/cloudfoundry-incubator/receptor"
	"github.com/cloudfoundry-incubator/runtime-schema/cc_messages"
)

type FakeDiffer struct {
	DiffStub        func(existing []receptor.DesiredLRPResponse, desiredChan <-chan *cc_messages.DesireAppRequestFromCC, lrpChan chan<- *receptor.DesiredLRPCreateRequest, deleteListChan chan<- []string)
	diffMutex       sync.RWMutex
	diffArgsForCall []struct {
		existing       []receptor.DesiredLRPResponse
		desiredChan    <-chan *cc_messages.DesireAppRequestFromCC
		lrpChan        chan<- *receptor.DesiredLRPCreateRequest
		deleteListChan chan<- []string
	}
}

func (fake *FakeDiffer) Diff(existing []receptor.DesiredLRPResponse, desiredChan <-chan *cc_messages.DesireAppRequestFromCC, lrpChan chan<- *receptor.DesiredLRPCreateRequest, deleteListChan chan<- []string) {
	fake.diffMutex.Lock()
	fake.diffArgsForCall = append(fake.diffArgsForCall, struct {
		existing       []receptor.DesiredLRPResponse
		desiredChan    <-chan *cc_messages.DesireAppRequestFromCC
		lrpChan        chan<- *receptor.DesiredLRPCreateRequest
		deleteListChan chan<- []string
	}{existing, desiredChan, lrpChan, deleteListChan})
	fake.diffMutex.Unlock()
	if fake.DiffStub != nil {
		fake.DiffStub(existing, desiredChan, lrpChan, deleteListChan)
	}
}

func (fake *FakeDiffer) DiffCallCount() int {
	fake.diffMutex.RLock()
	defer fake.diffMutex.RUnlock()
	return len(fake.diffArgsForCall)
}

func (fake *FakeDiffer) DiffArgsForCall(i int) ([]receptor.DesiredLRPResponse, <-chan *cc_messages.DesireAppRequestFromCC, chan<- *receptor.DesiredLRPCreateRequest, chan<- []string) {
	fake.diffMutex.RLock()
	defer fake.diffMutex.RUnlock()
	return fake.diffArgsForCall[i].existing, fake.diffArgsForCall[i].desiredChan, fake.diffArgsForCall[i].lrpChan, fake.diffArgsForCall[i].deleteListChan
}

var _ bulk.Differ = new(FakeDiffer)
